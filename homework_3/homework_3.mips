# in MIPS assembly
# Paste the code below, along with the output

# Counting from 1 to 10 implemented in MIPS assembly by Jared Weiss 3/11/2021
.text
.globl main
main:
    add $t0 $t0, 1      # $t0 += 1
loop:
    move $a0, $t0       # move the contents of t0 to a0 (i.e. 1, 2, 3 ...)
    li $v0 1            # set to $v0 print integer syscall
    syscall             # make the syscall
    add $t0, $t0, 1     # $t0 += 1
    jal print_newline   # print off a newline (saves return address to $ra)
    bne $t0, 11, loop   # check to see if we're done, otherwise jump to the top of the loop
    li $v0, 10          # exit syscall
    syscall             # execute the syscall

print_newline:
    li $v0 4            # print string syscall
    la $a0 str          # load the pointer to the string into $a0
    syscall             # execute the syscall
    jr $ra              # jump to the return address

.data
str: .asciiz "\n"       # a newline string

# END PROGRAM

OUTPUT
1
2
3
4
5
6
7
8
9
10